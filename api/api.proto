syntax = "proto3";

service Engine {
    rpc Version(VersionRequest) returns (VersionResponse) {}
    
    // A single response with the parsing result.
    rpc Parse(ParseRequest) returns (ParseResponse) {}
    // A stream of responses with logs and finally the parsing result.
    rpc ParseWithLogs(ParseRequest) returns (stream ParseResponse) {}

    // Driver management.
    // List all drivers.
    rpc ListDrivers(ListDriversRequest) returns (ListDriversResponse) {}

    // Install drivers.
    rpc InstallDriver(VersionedDriver) returns (InstallDriverResponse) {}

    // Update drivers.
    rpc UpdateDriver(VersionedDriver) returns (UpdateDriverResponse) {}

    // Remove drivers.
    rpc RemoveDriver(RemoveDriverRequest) returns (RemoveDriverResponse) {}

    // SQL stuff.
    rpc SQL(SQLRequest) returns (SQLResponse) {}

    // Start a component.
    rpc StartComponent(StartComponentRequest) returns (StartComponentResponse) {}

    // Start a component and streams logs.
    rpc StartComponentWithLogs(StartComponentRequest) returns (stream StartComponentResponse) {}

    // Stop a component.
    rpc StopComponent(StopComponentRequest) returns (StopComponentResponse) {}
}

message VersionRequest {}

message VersionResponse {
    string version = 1;
}

message ParseRequest {
    enum Kind {
        INVALID = 0;
        LANG = 1;
        UAST = 2;
    }
    
    Kind kind = 1;
    string name = 2;
    bytes content = 3;
    
    // used for UAST and Native only
    string lang = 4;
    string query = 5;
}

message ParseResponse {
    enum Kind  {
        INVALID = 0;
        LOG = 1;
        FINAL = 2;
    }
    Kind kind = 1;
    string lang = 2;
    repeated bytes uast = 3;
    string log = 4;
}

message ListDriversRequest {}

message ListDriversResponse {
    message DriverInfo {
        string lang = 1;
        string version = 2;
    }
    repeated DriverInfo drivers = 1;
}

message SQLRequest {
    string query = 1;
}

message SQLResponse {
    message Row {
        repeated string cell = 1;
    }
    Row header = 1;
    repeated Row rows = 2;
}

message StartComponentRequest {
    string name = 1;
    int32 port = 2;
}

message StartComponentResponse {
    enum Kind  {
        INVALID = 0;
        LOG = 1;
        FINAL = 2;
    }
    Kind kind = 1;
    LogEntry log = 2;
}

message StopComponentRequest {
    string name = 1;
}

message StopComponentResponse {}

message VersionedDriver {
    string language = 1;
    string version = 2;
}

message InstallDriverResponse {}

message UpdateDriverResponse {}

message RemoveDriverRequest {
    string language = 1;
}

message RemoveDriverResponse {}

message LogEntry {
    enum Level {
        INFO = 0;
        WARN = 1;
        ERROR = 2;
    }
    Level level = 1;
    string message = 2;
}